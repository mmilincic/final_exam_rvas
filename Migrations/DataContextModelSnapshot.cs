// <auto-generated />
using System;
using F1App.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Formula.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Formula.Models.Staza", b =>
                {
                    b.Property<int>("stazaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("stazaId"));

                    b.Property<int?>("TrketrkaId")
                        .HasColumnType("int");

                    b.Property<float>("duzina")
                        .HasColumnType("real");

                    b.Property<string>("nazivStaze")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("trke")
                        .HasColumnType("int");

                    b.HasKey("stazaId");

                    b.HasIndex("TrketrkaId");

                    b.ToTable("Staze");
                });

            modelBuilder.Entity("Formula.Models.Tim", b =>
                {
                    b.Property<int>("timId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("timId"));

                    b.Property<string>("nazivTima")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("timId");

                    b.ToTable("Timovi");
                });

            modelBuilder.Entity("Formula.Models.Trke", b =>
                {
                    b.Property<int>("trkaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("trkaId"));

                    b.Property<DateOnly>("datumTrke")
                        .HasColumnType("date");

                    b.HasKey("trkaId");

                    b.ToTable("Trke");
                });

            modelBuilder.Entity("Formula.Models.Vozac", b =>
                {
                    b.Property<int>("vozacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("vozacId"));

                    b.Property<int>("brojVozaca")
                        .HasColumnType("int");

                    b.Property<DateOnly>("datumRodjenja")
                        .HasColumnType("date");

                    b.Property<string>("ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nacionalnost")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tim")
                        .HasColumnType("int");

                    b.Property<int?>("timId")
                        .HasColumnType("int");

                    b.HasKey("vozacId");

                    b.HasIndex("timId");

                    b.ToTable("Vozaci");
                });

            modelBuilder.Entity("Rezultat", b =>
                {
                    b.Property<int>("rezultatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("rezultatId"));

                    b.Property<DateTime>("datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("poeni")
                        .HasColumnType("int");

                    b.Property<int>("trkaId")
                        .HasColumnType("int");

                    b.Property<int>("trketrkaId")
                        .HasColumnType("int");

                    b.Property<int>("vozacId")
                        .HasColumnType("int");

                    b.HasKey("rezultatId");

                    b.HasIndex("trketrkaId");

                    b.HasIndex("vozacId");

                    b.ToTable("Rezultati");
                });

            modelBuilder.Entity("Sponzori", b =>
                {
                    b.Property<int>("sponzorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sponzorId"));

                    b.Property<string>("naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("sponzorId");

                    b.ToTable("Sponzori");
                });

            modelBuilder.Entity("SponzoriVozac", b =>
                {
                    b.Property<int>("sponzorId")
                        .HasColumnType("int");

                    b.Property<int>("vozacId")
                        .HasColumnType("int");

                    b.HasKey("sponzorId", "vozacId");

                    b.HasIndex("vozacId");

                    b.ToTable("SponzoriVozac");
                });

            modelBuilder.Entity("Formula.Models.Staza", b =>
                {
                    b.HasOne("Formula.Models.Trke", null)
                        .WithMany("stazas")
                        .HasForeignKey("TrketrkaId");
                });

            modelBuilder.Entity("Formula.Models.Vozac", b =>
                {
                    b.HasOne("Formula.Models.Tim", null)
                        .WithMany("vozaci")
                        .HasForeignKey("timId");
                });

            modelBuilder.Entity("Rezultat", b =>
                {
                    b.HasOne("Formula.Models.Trke", "trke")
                        .WithMany()
                        .HasForeignKey("trketrkaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Formula.Models.Vozac", "vozac")
                        .WithMany("rezultati")
                        .HasForeignKey("vozacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("trke");

                    b.Navigation("vozac");
                });

            modelBuilder.Entity("SponzoriVozac", b =>
                {
                    b.HasOne("Sponzori", null)
                        .WithMany()
                        .HasForeignKey("sponzorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Formula.Models.Vozac", null)
                        .WithMany()
                        .HasForeignKey("vozacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Formula.Models.Tim", b =>
                {
                    b.Navigation("vozaci");
                });

            modelBuilder.Entity("Formula.Models.Trke", b =>
                {
                    b.Navigation("stazas");
                });

            modelBuilder.Entity("Formula.Models.Vozac", b =>
                {
                    b.Navigation("rezultati");
                });
#pragma warning restore 612, 618
        }
    }
}
